<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="biliard">
		
     <!-- 테이블별 매출 검색리스트 가져오기 -->
    	<select id="selectOneTableSales" parameterType="com.modang.vo.TableGamesVo" resultType="com.modang.vo.TableGamesVo">
			<![CDATA[
				select	b.biliardNo,
				        c.tableNo,
				        c.tableName, 
				        g.gameType,
				       	TO_CHAR(g.gamedate, 'MM/DD') AS gamedate,  
				        (SELECT
                            TO_CHAR(NVL(TRUNC(g.gameTime / 3600), 0), 'FM00') || ':' ||
                            TO_CHAR(NVL(TRUNC(MOD(g.gameTime, 3600) / 60), 0), 'FM00') || ':' ||
                            TO_CHAR(NVL(MOD(g.gameTime, 60), 0), 'FM00') AS formatted_time
                        FROM dual)as gameTime1 ,
				        TO_CHAR(g.starttime, 'HH24:MI') AS starttime,
				        TO_CHAR(g.endtime, 'HH24:MI') AS endtime,
				        g.payStatus,
				        g.payType,  
				        TO_CHAR(g.income, '9,999,999,999') AS comIncome,
				        g.income,
				        g.payMoney,
				        TO_CHAR(g.payMoney, '9,999,999,999') AS comPayMoney
				from biliards b, cuetable c, games g
				where b.biliardNo = c.biliardNo
				and c.tableNo = g.tableNo
				and g.payStatus = 1 
			]]>
			<if test="biliardNo != 0">
				and c.biliardNo = #{biliardNo}
			</if>	
			<if test="tableNo != 0">
    			and c.tableNo = #{tableNo}
    		</if>
    		<if test="minDate !=null and  minDate !='' " >
    			and <![CDATA[ g.gamedate >= #{minDate} ]]>
    		</if>
    		<if test="maxDate !=null and  maxDate !='' " >
    			and <![CDATA[ g.gamedate <= to_date(#{maxDate}) ]]>
    		</if>
			<![CDATA[
				order by gameDate desc
			]]>	
				
		</select>
		
		
		<!-- 테이블별 매출 검색리스트 합계 가져오기-->
		<select id="selectTotalTableSales" parameterType="com.modang.vo.TableGamesVo" resultType="com.modang.vo.TotalVo">
			<![CDATA[
				select  c_payMoney, c_income, m_payMoney, m_income, t_payMoney, t_income
				from 
				(
					select  sum(payMoney) c_payMoney, sum(income) c_income
					from biliards b, cuetable c, games g
					where b.biliardNo = c.biliardNo
					and c.tableNo = g.tableNo
					and g.payStatus = 1 
					and g.payType = 0 
			]]>	
				<if test="biliardNo != 0">
					and c.biliardNo = #{biliardNo}
				</if>		
				<if test="tableNo != 0">
    				and c.tableNo = #{tableNo}
    			</if>
    			<if test="minDate !=null and  minDate !='' " >
    				and <![CDATA[ g.gamedate >= #{minDate} ]]>
    			</if>
    			<if test="maxDate !=null and  maxDate !='' " >
    				and <![CDATA[ g.gamedate <= to_date(#{maxDate}) ]]>
    			</if>
    		<![CDATA[
				),
				(
					select  sum(payMoney) m_payMoney, sum(income) m_income
					from biliards b, cuetable c, games g
					where b.biliardNo = c.biliardNo
					and c.tableNo = g.tableNo
					and g.payStatus = 1 
					and g.payType = 1
			]]>		
				<if test="biliardNo != 0">
					and c.biliardNo = #{biliardNo}
				</if>	
				<if test="tableNo != 0">
    				and c.tableNo = #{tableNo}
    			</if>
    			<if test="minDate !=null and  minDate !='' " >
    				and <![CDATA[ g.gamedate >= #{minDate} ]]>
    			</if>
    			<if test="maxDate !=null and  maxDate !='' " >
    				and <![CDATA[ g.gamedate <= to_date(#{maxDate}) ]]>
    			</if>
			<![CDATA[		
				),
				(
					select  sum(payMoney) t_payMoney, sum(income) t_income
					from biliards b, cuetable c, games g
					where b.biliardNo = c.biliardNo
					and c.tableNo = g.tableNo
					and g.payStatus = 1
			]]>	
				<if test="biliardNo != 0">
					and c.biliardNo = #{biliardNo}
				</if>
				<if test="tableNo != 0">
    				and c.tableNo = #{tableNo}
    			</if>
    			<if test="minDate !=null and  minDate !='' " >
    				and <![CDATA[ g.gamedate >= #{minDate} ]]>
    			</if>
    			<if test="maxDate !=null and  maxDate !='' " >
    				and <![CDATA[ g.gamedate <= to_date(#{maxDate}) ]]>
    			</if>
    		<![CDATA[		
				)
			]]>
				
				
		</select>
		
		<!-- 날짜별 매출 가져오기 -->
		<select id="selectTotalSalesByDay" parameterType="com.modang.vo.TableGamesVo" resultType="com.modang.vo.TotalVo">
			<![CDATA[
				select  to_char(c.gameDate, 'YYYY-MM-DD') gameDate,
				        nvl(c_income,0) c_income,
				        nvl(c_payMoney,0)c_payMoney,
				        nvl(m_income,0) m_income,
				        nvl(m_payMoney,0) m_payMoney,
				        nvl(c_income,0)+nvl(m_income,0) t_income,
				        nvl(c_payMoney,0)+nvl(m_payMoney,0) t_payMoney
				from
				(
					select  g.gameDate,
					        sum(income) c_income,
					        sum(payMoney) c_payMoney
					from biliards b, cuetable c, games g
					where b.biliardNo = c.biliardNo
					and c.tableNo = g.tableNo 
					and g.payStatus = 1 
					and g.payType = 0 
					and c.biliardNo = #{biliardNo}
			]]>		
				<if test="minDate !=null and  minDate !='' " >
   					and <![CDATA[ g.gamedate >= #{minDate} ]]>
   				</if>
   				<if test="maxDate !=null and  maxDate !='' " >
   					and <![CDATA[ g.gamedate <= to_date(#{maxDate}) ]]>
    			</if>
			<![CDATA[		
					group by g.gameDate
				)c full join
				(
					select  g.gameDate,
					        sum(income) m_income,
					        sum(payMoney) m_payMoney
					from biliards b, cuetable c, games g
					where b.biliardNo = c.biliardNo
					and c.tableNo = g.tableNo 
					and g.payStatus = 1 
					and g.payType = 1 
					and c.biliardNo = #{biliardNo}
			]]>		
				<if test="minDate !=null and  minDate !='' " >
   					and <![CDATA[ g.gamedate >= #{minDate} ]]>
   				</if>
   				<if test="maxDate !=null and  maxDate !='' " >
   					and <![CDATA[ g.gamedate <= to_date(#{maxDate}) ]]>
    				</if>
			<![CDATA[				
					group by g.gameDate
				)m
				on c.gameDate = m.gameDate
				order by gameDate desc
			]]>
				
		</select>
		

		<!-- 날짜별 매출 그래프용 -->
		<select id="selectTotalSalesChart" parameterType="com.modang.vo.TableGamesVo" resultType="com.modang.vo.TotalVo">
			<![CDATA[
				select ort.rn,
                       to_char(ort.gameDate, 'YYYY-MM-DD') gameDate,
					   to_char(ort.gameDate, 'MM"월"DD"일"') dates, 
				       ort.c_income, 
				       ort.c_payMoney, 
				       ort.m_income, 
				       ort.m_payMoney, 
				       ort.t_income,
				       ort.t_payMoney
				from (
				        select rownum rn,
				               ot.gameDate, 
				               ot.c_income, 
				               ot.c_payMoney, 
				               ot.m_income, 
				               ot.m_payMoney, 
				               ot.t_income,
				               ot.t_payMoney
				        from (
				                select  c.gameDate,
				                        nvl(c_income,0) c_income,
				                        nvl(c_payMoney,0)c_payMoney,
				                        nvl(m_income,0) m_income,
				                        nvl(m_payMoney,0) m_payMoney,
				                        nvl(c_income,0)+nvl(m_income,0) t_income,
				                        nvl(c_payMoney,0)+nvl(m_payMoney,0) t_payMoney
				                from
                                    (
                                    select  g.gameDate,
                                            sum(income) c_income,
                                            sum(payMoney) c_payMoney
                                    from biliards b, cuetable c, games g
                                    where b.biliardNo = c.biliardNo
                                    and c.tableNo = g.tableNo 
                                    and g.payStatus = 1 
                                    and g.payType = 0
                                    and c.biliardNo = #{biliardNo}
                                    group by g.gameDate
                                    )c full join
                                    (
                                    select  g.gameDate,
                                            sum(income) m_income,
                                            sum(payMoney) m_payMoney
                                    from biliards b, cuetable c, games g
                                    where b.biliardNo = c.biliardNo
                                    and c.tableNo = g.tableNo 
                                    and g.payStatus = 1 
                                    and g.payType = 1
                                    and c.biliardNo = #{biliardNo}
                                    group by g.gameDate
                                    )m
                                on c.gameDate = m.gameDate
				                order by gameDate desc
				            )ot
				        )ort
				where rn >= 1
				and rn <=7
			]]>
				
		</select>


		<!-- 테이블 결제하기 -->
		<update id="updateIncome" parameterType="com.modang.vo.TableGamesVo">
			<![CDATA[
				update games set income=#{income},
				                 payType=#{payType},
                 				 paystatus=1
       			where gameno=#{gameNo}	
			]]>
		</update>
		
		

    	<!-- 테이블별 미정산 리스트 가져오기 -->
    	<select id="selectIncaluList" parameterType="com.modang.vo.CueTableVo" resultType="com.modang.vo.TableGamesVo">
			<![CDATA[
					select row_number()over(order by gameno)num, 
					        gameno,
					        tableno,
					        starttime,
					        endtime,
					        paymoney 
					        from 
					        games 
					        where tableno=#{tableNo}
					        and and endtime is not null 
					        and  paystatus='0'					
			]]>
		</select>
		

		<!-- 테이블 추가하기 -->
		<insert id="insertTable" parameterType="com.modang.vo.CueTableVo">  
			 <![CDATA[
				insert into cuetable(tableno,biliardno,tabletype,status,tablename) 
				values( SEQ_CUETABLE_NO.nextval,
                        #{biliardNo},
                        #{tableType},
                        0,
                        #{tableName})
			 ]]>
		</insert>


    	<!-- 하나의 테이블 기본정보 가져오기 -->
    	<select id="selectOnetable" parameterType="int" resultType="com.modang.vo.CueTableVo">
			<![CDATA[
					select tableno,
					       biliardno,
					       tablename,
					       tabletype,
					       status as tableStatus      
					from cuetable 
					where tableno = #{tableno} 
			]]>
		</select>
		
		
		
		<!-- 테이블 종류 수정 -->
		<update id="updatetableType" parameterType="com.modang.vo.CueTableVo">
			<![CDATA[
				update cuetable set tabletype=#{tableType}
			    where tableNo =#{tableNo}  
			  ]]>
		</update>
	
	
		<!-- 게임정보리스트가져오기 -->
		<select id="selectGamesList" parameterType="int" resultType="com.modang.vo.TableGamesVo">
			<![CDATA[
				select g.gameNo,
				         g.tableNo,
				         g.gameType,
				         g.memberNum,
				         g.gameDate,
				         g.gameTime,
				         g.startTime,
				         g.endTime,
				         g.payStatus,
				         g.payType,
				         g.payDate,
				         g.income,
				         g.payMoney,
				         g.pauseStart,
				         g.pauseStop,
				         g.pauseTime,
				         g.setNo
				from games g, cuetable c
				where g.tableNo=c.tableNo
				and c.biliardNo=#{biliardNo}
				and g.payStatus=0
			]]>	
		</select>

	<!-- 테이블상세정보 -->
		<select id="selectTableInfo" parameterType="com.modang.vo.CueTableVo" resultType="com.modang.vo.TableGamesVo">
			<![CDATA[
				select g.gameno,
				       g.tableno,
				       g.gametype,
				       g.membernum,
				       g.gamedate,
				       g.gametime,
				       g.starttime,
				       g.endtime,
				       g.paystatus,
				       g.paytype,
				       g.paydate,
				       g.income,
				       g.paymoney,
				       g.pausestart,
				       g.pausestop,
				       g.pausetime,
				       g.setno,
				       c.tableno,
				       c.biliardno,
				       c.tablename,
				       c.tabletype,
				       c.status as tableStatus
				from cuetable c
				full join games g
				on g.tableno=c.tableno
				where g.gameno = (select Max(gameno) from games where tableno= #{tableNo})
	
			]]>	
			
		</select>

	<!-- 테이블전체리스트 -->
		<select id="selectTableList" parameterType="int" resultType="com.modang.vo.CueTableVo">
			<![CDATA[
				select tableno,
				       biliardno,
				       tablename,
				       tabletype,
				       status as tableStatus      
				from cuetable where biliardno = #{biliardNo}
				order by tablename
			]]>	
		</select> 
	
	<!-- 요금 테이블 정보 가져오기 -->
		<select id="selectPrice" parameterType="int" resultType="com.modang.vo.TariffVo">
			<![CDATA[
				select biliardno,
				       btablefee,
				       mtablefee,
				       ptablefee,
				       bminfee,
				       mminfee,
				       pminfee
				from tariff
				where biliardno =#{[biliardNo}
			]]>	
			
		</select>
	
	<!-- 요금 테이블 수정 -->
		<update id="updatePrice" parameterType="com.modang.vo.TariffVo">
			<![CDATA[
					update tariff set btablefee = #{btablefee},
					                  mtablefee = #{mtablefee},
					                  ptablefee = #{ptablefee},
					                  bminfee = #{bminfee},
					                  mminfee = #{mminfee},
					                  pminfee = #{pminfee}
					where biliardno=#{biliardno}
			  ]]>
		</update>

</mapper>